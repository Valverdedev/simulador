// <auto-generated />
using System;
using InvestimentosSimulacao.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace InvestimentosSimulacao.Infrastructure.Postgre.Migracoes
{
    [DbContext(typeof(PostgreContext))]
    [Migration("20240911135635_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0-preview.7.24405.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("InvestimentosSimulacao.Domain.Dominio.Entidades.Ativo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nome");

                    b.Property<string>("TipoInvestimento")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("tipo_investimento");

                    b.HasKey("Id");

                    b.ToTable("ativos", (string)null);
                });

            modelBuilder.Entity("InvestimentosSimulacao.Domain.Dominio.Entidades.Ativo", b =>
                {
                    b.OwnsOne("InvestimentosSimulacao.Domain.ValueObjects.TaxaDeRetorno", "TaxaDeRetorno", b1 =>
                        {
                            b1.Property<int>("AtivoId")
                                .HasColumnType("integer");

                            b1.Property<double>("Valor")
                                .HasColumnType("decimal(10, 2)")
                                .HasColumnName("taxa_retorno");

                            b1.HasKey("AtivoId");

                            b1.ToTable("ativos");

                            b1.WithOwner()
                                .HasForeignKey("AtivoId");
                        });

                    b.Navigation("TaxaDeRetorno")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
